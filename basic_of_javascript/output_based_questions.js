// let arr = [1, 2, 3];
// arr[10] = 99;
// console.log(arr.length);

// // ****************************************************************************************************************************************************

// let arr = [1, 2, 3];
// arr.length = 0;
// console.log(arr);

// // ****************************************************************************************************************************************************

// let arr = [1, 2, 3];
// arr.splice(1, 0, 4, 5);
// console.log(arr);

// // ****************************************************************************************************************************************************

// let arr = [1, 2, 3];
// let arr2 = arr;
// arr2.push(4);
// console.log(arr);

// // ****************************************************************************************************************************************************

// let arr = [1, 2, 3];
// let arr2 = [...arr];
// arr2.push(4);
// console.log(arr);

// // ****************************************************************************************************************************************************

// let arr = [1, 2, 3];
// arr.splice(1, 1);
// console.log(arr);

// // ****************************************************************************************************************************************************

// let arr = [1, 2, 3];
// let result = arr.map((num) => num * 2);
// console.log(result);

// // ****************************************************************************************************************************************************

// let arr = [1, 2, 3];
// let result = arr.filter((num) => num > 1);
// console.log(result);

// // ****************************************************************************************************************************************************

// let arr = [1, 2, 3];
// let result = arr.reduce((acc, num) => acc + num, 0);
// console.log(result);

// // ****************************************************************************************************************************************************

// let arr = [1, 2, 3];
// let result = arr.find((num) => num > 2);
// console.log(result);

// // ****************************************************************************************************************************************************

// let arr = [1, 2, 3];
// let result = arr.includes(2);
// console.log(result);

// // ****************************************************************************************************************************************************

// let arr = [1, 2, 3];
// let result = arr.slice(1, 2);
// console.log(result);

// // ****************************************************************************************************************************************************

// let arr = [1, 2, 3];
// let result = arr.join("-");
// console.log(result);

// // ****************************************************************************************************************************************************

// let arr = [1, 2, 3];
// let result = arr.reverse();
// console.log(result);

// // ****************************************************************************************************************************************************

// let arr = [1, 2, 3];
// let result = arr.sort((a, b) => b - a);
// console.log(result);

// // ****************************************************************************************************************************************************

// let obj = { a: 1, b: 2 };
// obj.c = 3;
// console.log(obj);

// // ****************************************************************************************************************************************************

// let obj = { a: 1, b: 2 };
// let obj2 = obj;
// obj2.c = 3;
// console.log(obj);

// // ****************************************************************************************************************************************************

// let obj = { a: 1, b: 2 };
// let obj2 = { ...obj };
// obj2.c = 3;
// console.log(obj);

// // ****************************************************************************************************************************************************

// let obj = { a: 1, b: 2 };
// delete obj.a;
// console.log(obj);

// // ****************************************************************************************************************************************************

// let obj = { a: 1, b: 2 };
// console.log(Object.keys(obj));

// // ****************************************************************************************************************************************************

// let obj = { a: 1, b: 2 };
// console.log(Object.values(obj));

// // ****************************************************************************************************************************************************

// let obj = { a: 1, b: 2 };
// console.log(Object.entries(obj));

// // ****************************************************************************************************************************************************

// let obj = { a: 1, b: 2 };
// let obj2 = Object.assign({}, obj, { c: 3 });
// console.log(obj2);

// // ****************************************************************************************************************************************************

// let obj = { a: 1, b: 2 };
// let obj2 = { ...obj, c: 3 };
// console.log(obj2);

// // ****************************************************************************************************************************************************

// let obj = { a: 1, b: 2 };
// let { a, b } = obj;
// console.log(a, b);

// // ****************************************************************************************************************************************************

// let obj = { a: 1, b: 2 };
// let { a: x, b: y } = obj;
// console.log(x, y);

// // ****************************************************************************************************************************************************

// let obj = { a: 1, b: 2 };
// let { a, ...rest } = obj;
// console.log(rest);

// // ****************************************************************************************************************************************************

// let obj = { a: 1, b: 2 };
// let obj2 = { ...obj, a: 3 };
// console.log(obj2);

// // ****************************************************************************************************************************************************

// let obj = { a: 1, b: 2 };
// let obj2 = { a: 3, ...obj };
// console.log(obj2);

// // ****************************************************************************************************************************************************

// let obj = { a: 1, b: 2 };
// let obj2 = { ...obj, a: 3, b: 4 };
// console.log(obj2);

// // ****************************************************************************************************************************************************

/*
 * Q. Find Common Key-Value Pairs Between Two Objects in JavaScript ğŸš€
 */

// const input1 = { a: 1, b: 2, c: 3, d: 10, e: 12 };
// const input2 = { a: 2, e: 12, f: 6, d: 10, f: 2 };

// const output = { d: 10, e: 12 };

// const duplicateEntries = (obj1, obj2) => {
// 	let entries = {};

// 	for (let key in obj1) {
// 		if (key in obj2 && obj1[key] === obj2[key]) {
// 			entries[key] = obj1[key];
// 		}
// 	}

// 	return entries;
// };

// const result = duplicateEntries(input1, input2);

// console.log(result);

/*
 ****************************************************************************************************************************************************
 */

/*
 ****************************************************************************************************************************************************
 */

/*
 ****************************************************************************************************************************************************
 */

/*
 ****************************************************************************************************************************************************
 */
